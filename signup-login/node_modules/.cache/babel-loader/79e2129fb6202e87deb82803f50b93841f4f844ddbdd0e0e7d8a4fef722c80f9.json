{"ast":null,"code":"var _jsxFileName = \"E:\\\\Informatics Institute of Technology\\\\Undergraduate\\\\2nd year (Level 5)\\\\Semester 1\\\\5COSC021C Software Development Group Project (CS)\\\\CW 02\\\\Code\\\\SDGP-CS14-Front-end\\\\signup-login\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const videoRef = useRef(null);\n  const canvasRef = useRef(null);\n  const [photoUrl, setPhotoUrl] = useState(null);\n  const startWebcam = async () => {\n    try {\n      const stream = await navigator.mediaDevices.getUserMedia({\n        video: true\n      });\n      if (videoRef.current) {\n        videoRef.current.srcObject = stream;\n      }\n    } catch (error) {\n      console.error('Error accessing webcam:', error);\n    }\n  };\n  const takePhoto = () => {\n    const video = videoRef.current;\n    const canvas = canvasRef.current;\n    if (video && canvas) {\n      const context = canvas.getContext('2d');\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n      // Convert the canvas content to a data URL\n      const photoDataUrl = canvas.toDataURL('image/png');\n      setPhotoUrl(photoDataUrl);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: startWebcam,\n      children: \"Start Webcam\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n      ref: videoRef,\n      autoPlay: true,\n      muted: true,\n      style: {\n        width: '100%',\n        maxWidth: '600px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: takePhoto,\n      children: \"Take Photo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), photoUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Captured Photo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: photoUrl,\n        alt: \"Captured\",\n        style: {\n          maxWidth: '100%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"XNsSe1GlQJ78U92LIZgrZKc8JhQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useRef","useState","jsxDEV","_jsxDEV","Dashboard","_s","videoRef","canvasRef","photoUrl","setPhotoUrl","startWebcam","stream","navigator","mediaDevices","getUserMedia","video","current","srcObject","error","console","takePhoto","canvas","context","getContext","drawImage","width","height","photoDataUrl","toDataURL","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","ref","autoPlay","muted","style","maxWidth","src","alt","display","_c","$RefreshReg$"],"sources":["E:/Informatics Institute of Technology/Undergraduate/2nd year (Level 5)/Semester 1/5COSC021C Software Development Group Project (CS)/CW 02/Code/SDGP-CS14-Front-end/signup-login/src/components/Dashboard.js"],"sourcesContent":["import React, { useRef, useState } from 'react';\r\n\r\nconst Dashboard = () => {\r\n  const videoRef = useRef(null);\r\n  const canvasRef = useRef(null);\r\n  const [photoUrl, setPhotoUrl] = useState(null);\r\n\r\n  const startWebcam = async () => {\r\n    try {\r\n      const stream = await navigator.mediaDevices.getUserMedia({ video: true });\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error accessing webcam:', error);\r\n    }\r\n  };\r\n\r\n  const takePhoto = () => {\r\n    const video = videoRef.current;\r\n    const canvas = canvasRef.current;\r\n\r\n    if (video && canvas) {\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n      // Convert the canvas content to a data URL\r\n      const photoDataUrl = canvas.toDataURL('image/png');\r\n      setPhotoUrl(photoDataUrl);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Dashboard Page</h1>\r\n      \r\n      {/* Start webcam button */}\r\n      <button onClick={startWebcam}>Start Webcam</button>\r\n\r\n      {/* Webcam feed */}\r\n      <video ref={videoRef} autoPlay muted style={{ width: '100%', maxWidth: '600px' }} />\r\n\r\n      {/* Take photo button */}\r\n      <button onClick={takePhoto}>Take Photo</button>\r\n\r\n      {/* Display captured photo */}\r\n      {photoUrl && (\r\n        <div>\r\n          <h2>Captured Photo</h2>\r\n          <img src={photoUrl} alt=\"Captured\" style={{ maxWidth: '100%' }} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Canvas for capturing the photo */}\r\n      <canvas ref={canvasRef} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}