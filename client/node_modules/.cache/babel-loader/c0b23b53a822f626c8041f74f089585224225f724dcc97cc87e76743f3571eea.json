{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\SDGP\\\\SDGP-CS14-Front-end\\\\client\\\\src\\\\components\\\\singlePost\\\\SinglePost.jsx\",\n  _s = $RefreshSig$();\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\nimport \"./singlepost.css\";\nimport axios from \"axios\";\nimport { Context } from '../../context/Context';\n//import { useContext, useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SinglePost() {\n  _s();\n  var _user;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const path = location.pathname.split(\"/\")[2];\n  const [post, setPost] = useState({});\n  const PF = \"http://localhost:5000/uploads/\";\n  const [updateMode, setUpdateMode] = useState(false);\n  const [title, setTitle] = useState(\"\");\n  const [description, setDesc] = useState(\"\");\n  const [uid, setUid] = useState(\"\"); // Add state to store uid\n  //const {user} = useContext(Context);\n\n  useEffect(() => {\n    const getPost = async () => {\n      try {\n        const res = await axios.get(\"/posts/\" + path);\n        setPost(res.data);\n        setTitle(res.data.title);\n        setDesc(res.data.description);\n        setUid(res.data.uid); // Set uid from post data\n      } catch (error) {\n        console.error(\"Error fetching post:\", error);\n      }\n    };\n    getPost();\n  }, [path]);\n  const handleDelete = async () => {\n    try {\n      await axios.delete(`/posts/${path}`, {\n        data: {\n          uid\n        }\n      }); // Pass uid in the request body\n      navigate(\"/\"); // Redirect to homepage after deletion\n    } catch (error) {\n      console.error(\"Error deleting post:\", error);\n    }\n  };\n  const handleUpdate = async () => {\n    try {\n      const updatedPost = {\n        title: title,\n        description: description,\n        uid: uid\n      };\n      await axios.patch(`/posts/${path}`, updatedPost);\n      setUpdateMode(false); // Exit update mode after successful update\n      window.location.reload(); // Reload the page\n    } catch (error) {\n      console.error(\"Error updating post:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"singlePost\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"singlePostWrapper\",\n      children: [post.img && /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"singlePostImg\",\n        src: PF + post.img,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 22\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        className: \"singlePostTitleInput\",\n        autoFocus: true,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"singlePostTitle\",\n        children: [post.title, post.uid === ((_user = user) === null || _user === void 0 ? void 0 : _user.uid) &&\n        /*#__PURE__*/\n        // Check if current user's UID matches post's UID\n        _jsxDEV(\"div\", {\n          className: \"singlePostEdit\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-edit\",\n            onClick: () => setUpdateMode(true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"singlePostIcon far fa-trash-alt\",\n            onClick: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"singlePostInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Author:\", /*#__PURE__*/_jsxDEV(\"b\", {\n            className: \"singlePostAuthor\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              className: \"link\",\n              to: \"/posts?username=Safak\",\n              children: \"Admin\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: new Date(post.createdAt).toDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), updateMode ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"singlePostDesc\",\n        value: description,\n        onChange: e => setDesc(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"singlePostDesc\",\n        children: [\" \", post.description]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), updateMode && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"singlePostButton\",\n        onClick: handleUpdate,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n_s(SinglePost, \"VjGS2jRrO2a1gGDeZHvgpHXQpyA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = SinglePost;\nvar _c;\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"names":["Link","useLocation","useNavigate","axios","Context","jsxDEV","_jsxDEV","SinglePost","_s","_user","navigate","location","path","pathname","split","post","setPost","useState","PF","updateMode","setUpdateMode","title","setTitle","description","setDesc","uid","setUid","useEffect","getPost","res","get","data","error","console","handleDelete","delete","handleUpdate","updatedPost","patch","window","reload","className","children","img","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","value","autoFocus","onChange","e","target","user","onClick","to","Date","createdAt","toDateString","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/SDGP/SDGP-CS14-Front-end/client/src/components/singlePost/SinglePost.jsx"],"sourcesContent":["import { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport \"./singlepost.css\";\r\nimport axios from \"axios\";\r\nimport {Context} from'../../context/Context'\r\n//import { useContext, useEffect, useState } from \"react\";\r\n\r\nexport default function SinglePost() {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const path = location.pathname.split(\"/\")[2];\r\n  const [post, setPost] = useState({});\r\n  const PF = \"http://localhost:5000/uploads/\";\r\n  const [updateMode, setUpdateMode] = useState(false);\r\n  const [title, setTitle] = useState(\"\");\r\n  const [description, setDesc] = useState(\"\");\r\n  const [uid, setUid] = useState(\"\"); // Add state to store uid\r\n  //const {user} = useContext(Context);\r\n\r\n  useEffect(() => {\r\n    const getPost = async () => {\r\n      try {\r\n        const res = await axios.get(\"/posts/\" + path);\r\n        setPost(res.data);\r\n        setTitle(res.data.title);\r\n        setDesc(res.data.description);\r\n        setUid(res.data.uid); // Set uid from post data\r\n      } catch (error) {\r\n        console.error(\"Error fetching post:\", error);\r\n      }\r\n    };\r\n    getPost();\r\n  }, [path]);\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await axios.delete(`/posts/${path}`, { data: { uid } }); // Pass uid in the request body\r\n      navigate(\"/\"); // Redirect to homepage after deletion\r\n    } catch (error) {\r\n      console.error(\"Error deleting post:\", error);\r\n    }\r\n  };\r\n\r\n  const handleUpdate = async () => {\r\n    try {\r\n      const updatedPost = {\r\n        title: title,\r\n        description: description,\r\n        uid: uid, \r\n      };\r\n      await axios.patch(`/posts/${path}`, updatedPost);\r\n      setUpdateMode(false); // Exit update mode after successful update\r\n      window.location.reload(); // Reload the page\r\n    } catch (error) {\r\n      console.error(\"Error updating post:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"singlePost\">\r\n      <div className=\"singlePostWrapper\">\r\n        {post.img && <img className=\"singlePostImg\" src={PF + post.img} alt=\"\" />}\r\n        {updateMode ? (\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            className=\"singlePostTitleInput\"\r\n            autoFocus\r\n            onChange={(e) => setTitle(e.target.value)}\r\n          />\r\n        ) : (\r\n          <h1 className=\"singlePostTitle\">\r\n            {post.title}\r\n            {post.uid === user?.uid && ( // Check if current user's UID matches post's UID\r\n            <div className=\"singlePostEdit\">\r\n              <i className=\"singlePostIcon far fa-edit\" onClick={() => setUpdateMode(true)}></i>\r\n              <i className=\"singlePostIcon far fa-trash-alt\" onClick={handleDelete}></i>\r\n            </div>\r\n            )}\r\n          </h1>\r\n        )}\r\n        <div className=\"singlePostInfo\">\r\n          <span>\r\n            Author:\r\n            <b className=\"singlePostAuthor\">\r\n              <Link className=\"link\" to=\"/posts?username=Safak\">\r\n                Admin\r\n              </Link>\r\n            </b>\r\n          </span>\r\n          <div className=\"date\">\r\n            <span>{new Date(post.createdAt).toDateString()}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {updateMode ? (\r\n          <textarea className=\"singlePostDesc\" value={description} onChange={(e) => setDesc(e.target.value)} />\r\n        ) : (\r\n          <p className=\"singlePostDesc\"> {post.description}</p>\r\n        )}\r\n        {updateMode && <button className=\"singlePostButton\" onClick={handleUpdate}>Update</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}